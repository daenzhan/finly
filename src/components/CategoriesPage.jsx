// src/pages/CategoriesPage.js
import React, { useState, useEffect } from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { Link } from 'react-router-dom';
import { fetchCategories, addCategory, deleteCategory } from '../redux/actions/categoryActions';
import { toast } from 'react-toastify';

const defaultIncomeCategories = [
  { id: 'default_salary', name: '–ó–∞—Ä–ø–ª–∞—Ç–∞', icon: 'üíº', color: '#4CAF50', type: 'income' },
  { id: 'default_scholarship', name: '–°—Ç–∏–ø–µ–Ω–¥–∏—è', icon: 'üéì', color: '#8BC34A', type: 'income' },
  { id: 'default_pension', name: '–ü–µ–Ω—Å–∏—è', icon: 'üëµ', color: '#CDDC39', type: 'income' },
  { id: 'default_other_income', name: '–î—Ä—É–≥–æ–µ', icon: 'üí∞', color: '#FFC107', type: 'income' }
];

const defaultExpenseCategories = [
  { id: 'default_transport', name: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç', icon: 'üöï', color: '#F44336', type: 'expense' },
  { id: 'default_products', name: '–ü—Ä–æ–¥—É–∫—Ç—ã', icon: 'üçé', color: '#E91E63', type: 'expense' },
  { id: 'default_shopping', name: '–ü–æ–∫—É–ø–∫–∏', icon: 'üõçÔ∏è', color: '#9C27B0', type: 'expense' },
  { id: 'default_entertainment', name: '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è', icon: 'üé¨', color: '#673AB7', type: 'expense' },
  { id: 'default_other_expense', name: '–î—Ä—É–≥–æ–µ', icon: 'üí∏', color: '#3F51B5', type: 'expense' }
];

export default function CategoriesPage() {
  const dispatch = useDispatch();
  const [showModal, setShowModal] = useState(false);
  const [newCategory, setNewCategory] = useState({
    name: '',
    type: 'expense',
    icon: 'üí∞',
    color: '#4CAF50'
  });

  const { user } = useSelector((state) => state.auth);
  const { 
    data: categories, 
    loading, 
    error 
  } = useSelector((state) => state.categories);

  useEffect(() => {
    if (user?.id) {
      dispatch(fetchCategories(user.id));
    }
  }, [dispatch, user?.id]);

  const userIncomeCategories = categories?.filter(cat => cat.type === 'income') || [];
  const userExpenseCategories = categories?.filter(cat => cat.type === 'expense') || [];

  const handleAddCategory = async (e) => {
    e.preventDefault();
    try {
      await dispatch(addCategory({
        ...newCategory,
        userId: user.id
      }));
      setShowModal(false);
      setNewCategory({
        name: '',
        type: 'expense',
        icon: 'üí∞',
        color: '#4CAF50'
      });
      toast.success('–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞');
    } catch (error) {
      toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é');
    }
  };

  const handleDeleteCategory = async (categoryId) => {
    const confirmMessage = `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é? 
      ${defaultIncomeCategories.concat(defaultExpenseCategories).some(c => c.id === categoryId) 
        ? '–≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –æ–Ω–∞ –±—É–¥–µ—Ç —Å–∫—Ä—ã—Ç–∞.' 
        : '–í—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.'}`;
    
    if (window.confirm(confirmMessage)) {
      try {
        await dispatch(deleteCategory(categoryId));
        toast.success('–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞');
      } catch (error) {
        toast.error(error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é');
      }
    }
  };

  if (loading) return (
    <div className="flex justify-center items-center h-screen">
      <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500"></div>
    </div>
  );
  
  if (error) return <div className="p-4 text-red-500">–û—à–∏–±–∫–∞: {error}</div>;
  if (!user) return <div className="p-4">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω</div>;

  return (
    <div className="p-4 max-w-3xl mx-auto">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-2xl font-bold">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏</h1>
        <button 
          onClick={() => setShowModal(true)}
          className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
        >
          –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        </button>
      </div>

      <Link 
        to="/dashboard" 
        className="inline-block mb-6 px-4 py-2 bg-gray-200 rounded-lg hover:bg-gray-300 transition-colors"
      >
        ‚Üê –ù–∞–∑–∞–¥ –≤ Dashboard
      </Link>

      {/* –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤ */}
      <div className="mb-8">
        <h2 className="text-xl font-semibold mb-4"> –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
          {defaultIncomeCategories.map(category => (
            <CategoryCard 
              key={category.id} 
              category={category} 
              isDefault={true}
              onDelete={handleDeleteCategory}
            />
          ))}
        </div>
      </div>

      {/* –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤ */}
      {userIncomeCategories.length > 0 && (
        <div className="mb-8">
  
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
            {userIncomeCategories.map(category => (
              <CategoryCard 
                key={category.id} 
                category={category} 
                isDefault={false}
                onDelete={handleDeleteCategory}
              />
            ))}
          </div>
        </div>
      )}

      {/* –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ */}
      <div className="mb-8">
        <h2 className="text-xl font-semibold mb-4"> –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
          {defaultExpenseCategories.map(category => (
            <CategoryCard 
              key={category.id} 
              category={category} 
              isDefault={true}
              onDelete={handleDeleteCategory}
            />
          ))}
        </div>
      </div>

      {/* –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ */}
      {userExpenseCategories.length > 0 && (
        <div className="mb-8">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
            {userExpenseCategories.map(category => (
              <CategoryCard 
                key={category.id} 
                category={category} 
                isDefault={false}
                onDelete={handleDeleteCategory}
              />
            ))}
          </div>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
      {showModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white p-6 rounded-lg w-full max-w-md">
            <div className="flex justify-between items-center mb-4">
              <h2 className="text-xl font-bold">–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é</h2>
              <button 
                onClick={() => setShowModal(false)}
                className="text-gray-500 hover:text-gray-700"
              >
                ‚úï
              </button>
            </div>
            
            <form onSubmit={handleAddCategory}>
              <div className="mb-4">
                <label className="block mb-2 font-medium">–¢–∏–ø –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:</label>
                <div className="flex gap-2">
                  <button
                    type="button"
                    className={`flex-1 py-2 rounded-lg ${newCategory.type === 'income' ? 'bg-green-500 text-white' : 'bg-gray-100'}`}
                    onClick={() => setNewCategory({...newCategory, type: 'income'})}
                  >
                    –î–æ—Ö–æ–¥
                  </button>
                  <button
                    type="button"
                    className={`flex-1 py-2 rounded-lg ${newCategory.type === 'expense' ? 'bg-red-500 text-white' : 'bg-gray-100'}`}
                    onClick={() => setNewCategory({...newCategory, type: 'expense'})}
                  >
                    –†–∞—Å—Ö–æ–¥
                  </button>
                </div>
              </div>

              <div className="mb-4">
                <label className="block mb-2 font-medium">–ù–∞–∑–≤–∞–Ω–∏–µ:</label>
                <input
                  type="text"
                  value={newCategory.name}
                  onChange={(e) => setNewCategory({...newCategory, name: e.target.value})}
                  className="w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  required
                />
              </div>

              <div className="mb-4">
                <label className="block mb-2 font-medium">–ò–∫–æ–Ω–∫–∞:</label>
                <input
                  type="text"
                  value={newCategory.icon}
                  onChange={(e) => setNewCategory({...newCategory, icon: e.target.value})}
                  className="w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  required
                  maxLength="2"
                />
                <p className="text-sm text-gray-500 mt-1">–í–≤–µ–¥–∏—Ç–µ —ç–º–æ–¥–∑–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: üçé, üöï, üí∞)</p>
              </div>

              <div className="mb-4">
                <label className="block mb-2 font-medium">–¶–≤–µ—Ç:</label>
                <div className="flex items-center gap-4">
                  <input
                    type="color"
                    value={newCategory.color}
                    onChange={(e) => setNewCategory({...newCategory, color: e.target.value})}
                    className="w-16 h-12"
                  />
                  <span className="p-2 rounded" style={{ backgroundColor: newCategory.color }}>
                    {newCategory.icon} –ü—Ä–∏–º–µ—Ä
                  </span>
                </div>
              </div>

              <button
                type="submit"
                className="w-full py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors font-medium"
              >
                –°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
              </button>
            </form>
          </div>
        </div>
      )}
    </div>
  );
}

function CategoryCard({ category, isDefault, onDelete }) {
  return (
    <div className="p-4 bg-white rounded-lg shadow-sm border flex justify-between items-center">
      <div className="flex items-center gap-3">
        <span 
          className="text-2xl"
          style={{ color: category.color }}
        >
          {category.icon}
        </span>
        <div>
          <div className="font-medium">{category.name}</div>
          <div className="text-sm text-gray-500">
            {isDefault ? '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è'}
          </div>
        </div>
      </div>
      {!isDefault && (
        <button 
          onClick={() => onDelete(category.id)}
          className="text-red-500 hover:text-red-700"
          title="–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é"
        >
          √ó
        </button>
      )}
    </div>
  );
}